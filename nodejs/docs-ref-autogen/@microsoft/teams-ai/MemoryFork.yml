### YamlMime:TSType
name: MemoryFork
uid: '@microsoft/teams-ai.MemoryFork'
package: '@microsoft/teams-ai'
summary: Forks an existing memory.
fullName: MemoryFork
remarks: >-
  A memory fork is a memory that is a copy of another memory, but can be
  modified without

  affecting the original memory.
isDeprecated: false
type: class
constructors:
  - name: MemoryFork(Memory)
    uid: '@microsoft/teams-ai.MemoryFork.constructor'
    package: '@microsoft/teams-ai'
    summary: Creates a new `MemoryFork` instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new MemoryFork(memory: Memory)'
      parameters:
        - id: memory
          type: <xref uid="@microsoft/teams-ai.Memory" />
          description: Memory to fork.
methods:
  - name: deleteValue(string)
    uid: '@microsoft/teams-ai.MemoryFork.deleteValue'
    package: '@microsoft/teams-ai'
    summary: Deletes a value from the memory.
    remarks: Only forked values will be deleted.
    isDeprecated: false
    syntax:
      content: 'function deleteValue(path: string)'
      parameters:
        - id: path
          type: string
          description: >-
            Path to the value to delete in the form of `[scope].property`. If
            scope is omitted, the value is deleted from the temporary scope.
  - name: getValue<TValue>(string)
    uid: '@microsoft/teams-ai.MemoryFork.getValue'
    package: '@microsoft/teams-ai'
    summary: Retrieves a value from the memory.
    remarks: The forked memory is checked first, then the original memory.
    isDeprecated: false
    syntax:
      content: 'function getValue<TValue>(path: string): TValue'
      parameters:
        - id: path
          type: string
          description: >-
            Path to the value to retrieve in the form of `[scope].property`. If
            scope is omitted, the value is retrieved from the temporary scope.
      return:
        description: The value or undefined if not found.
        type: TValue
  - name: hasValue(string)
    uid: '@microsoft/teams-ai.MemoryFork.hasValue'
    package: '@microsoft/teams-ai'
    summary: Checks if a value exists in the memory.
    remarks: The forked memory is checked first, then the original memory.
    isDeprecated: false
    syntax:
      content: 'function hasValue(path: string): boolean'
      parameters:
        - id: path
          type: string
          description: >-
            Path to the value to check in the form of `[scope].property`. If
            scope is omitted, the value is checked in the temporary scope.
      return:
        description: True if the value exists, false otherwise.
        type: boolean
  - name: setValue(string, unknown)
    uid: '@microsoft/teams-ai.MemoryFork.setValue'
    package: '@microsoft/teams-ai'
    summary: Assigns a value to the memory.
    remarks: The value is assigned to the forked memory.
    isDeprecated: false
    syntax:
      content: 'function setValue(path: string, value: unknown)'
      parameters:
        - id: path
          type: string
          description: >-
            Path to the value to assign in the form of `[scope].property`. If
            scope is omitted, the value is assigned to the temporary scope.
        - id: value
          type: unknown
          description: Value to assign.
