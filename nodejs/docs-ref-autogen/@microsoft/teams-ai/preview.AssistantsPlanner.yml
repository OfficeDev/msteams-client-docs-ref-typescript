### YamlMime:TSType
name: AssistantsPlanner
uid: '@microsoft/teams-ai.preview.AssistantsPlanner'
package: '@microsoft/teams-ai'
summary: >-
  A Planner that uses the OpenAI Assistants API to generate plans for the AI
  system.
fullName: AssistantsPlanner<TState>
remarks: >-
  This planner manages conversations through OpenAI's thread-based system,
  handling:

  - Thread creation and management

  - Message submission

  - Tool/function calling

  - Response processing
isDeprecated: false
type: class
constructors:
  - name: AssistantsPlanner<TState>(AssistantsPlannerOptions)
    uid: '@microsoft/teams-ai.preview.AssistantsPlanner.constructor'
    package: '@microsoft/teams-ai'
    summary: Creates a new `AssistantsPlanner` instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new AssistantsPlanner(options: AssistantsPlannerOptions)'
      parameters:
        - id: options
          type: <xref uid="@microsoft/teams-ai.preview.AssistantsPlannerOptions" />
          description: Options for configuring the AssistantsPlanner.
methods:
  - name: beginTask(TurnContext, TState, AI<TState>)
    uid: '@microsoft/teams-ai.preview.AssistantsPlanner.beginTask'
    package: '@microsoft/teams-ai'
    summary: Starts a new task.
    remarks: >-
      This method is called when the AI system is ready to start a new task. It
      delegates the

      task handling to the `continueTask` method. The planner should

      generate a plan that the AI system will execute. Returning an empty plan
      signals that

      there is no work to be performed.


      The planner should take the users input from `state.temp.input`.
    isDeprecated: false
    syntax:
      content: >-
        function beginTask(context: TurnContext, state: TState, ai: AI<TState>):
        Promise<Plan>
      parameters:
        - id: context
          type: TurnContext
          description: Context for the current turn of conversation.
        - id: state
          type: TState
          description: Application state for the current turn of conversation.
        - id: ai
          type: <xref uid="@microsoft/teams-ai.AI" />&lt;TState&gt;
          description: The AI system that is generating the plan.
      return:
        description: The plan that was generated.
        type: Promise&lt;<xref uid="@microsoft/teams-ai.Plan" />&gt;
  - name: continueTask(TurnContext, TState, AI<TState>)
    uid: '@microsoft/teams-ai.preview.AssistantsPlanner.continueTask'
    package: '@microsoft/teams-ai'
    summary: Continues the current task.
    remarks: >-
      This method is called when the AI system is ready to continue the current
      task. It handles:

      - Creating a new thread if one doesn't exist

      - Submitting tool outputs if required

      - Waiting for any in-progress runs to complete

      - Submitting user input and creating a new run

      The method generates a plan that the AI system will execute. Returning an
      empty plan signals

      that the task is completed and there is no work to be performed.


      The output from the last plan step that was executed is passed to the
      planner via `state.temp.input`.
    isDeprecated: false
    syntax:
      content: >-
        function continueTask(context: TurnContext, state: TState, ai:
        AI<TState>): Promise<Plan>
      parameters:
        - id: context
          type: TurnContext
          description: Context for the current turn of conversation.
        - id: state
          type: TState
          description: Application state for the current turn of conversation.
        - id: ai
          type: <xref uid="@microsoft/teams-ai.AI" />&lt;TState&gt;
          description: The AI system that is generating the plan.
      return:
        description: The plan that was generated.
        type: Promise&lt;<xref uid="@microsoft/teams-ai.Plan" />&gt;
  - name: createAssistant(string, AssistantCreateParams, string, AzureClientOptions)
    uid: '@microsoft/teams-ai.preview.AssistantsPlanner.createAssistant'
    package: '@microsoft/teams-ai'
    summary: Creates a new assistant using the OpenAI Assistants API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function createAssistant(apiKey: string, request:
        AssistantCreateParams, endpoint?: string, azureClientOptions?:
        AzureClientOptions): Promise<Assistant>
      parameters:
        - id: apiKey
          type: string
          description: OpenAI API key.
        - id: request
          type: AssistantCreateParams
          description: Definition of the assistant to create.
        - id: endpoint
          type: string
          description: >-
            Optional. The Azure OpenAI resource endpoint. Required when using
            Azure OpenAI.
        - id: azureClientOptions
          type: AzureClientOptions
          description: Optional. The Azure OpenAI client options.
      return:
        description: The created assistant.
        type: Promise&lt;Assistant&gt;
