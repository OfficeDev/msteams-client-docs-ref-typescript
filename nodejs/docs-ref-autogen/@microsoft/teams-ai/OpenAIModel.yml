### YamlMime:TSType
name: OpenAIModel
uid: '@microsoft/teams-ai.OpenAIModel'
package: '@microsoft/teams-ai'
summary: A `PromptCompletionModel` for calling OpenAI and Azure OpenAI hosted models.
fullName: OpenAIModel
remarks: >-
  The model has been updated to support calling OpenAI's new o1 family of
  models. That currently

  comes with a few constraints. These constraints are mostly handled for you but
  are worth noting:

  - The o1 models introduce a new `max_completion_tokens` parameter and they've
  deprecated the
   `max_tokens` parameter. The model will automatically convert the incoming `max_tokens` parameter
  to `max_completion_tokens` for you. But you should be aware that o1 has hidden
  token usage and costs

  that aren't constrained by the `max_completion_tokens` parameter. This means
  that you may see an

  increase in token usage and costs when using the o1 models.

  - The o1 models do not currently support the sending of system messages which
  just means that the

  `useSystemMessages` parameter is ignored when calling the o1 models.

  - The o1 models do not currently support setting the `temperature`, `top_p`,
  and `presence_penalty`

  parameters so they will be ignored.

  - The o1 models do not currently support the use of tools so you will need to
  use the "monologue"

  augmentation to call actions.
isDeprecated: false
type: class
constructors:
  - name: OpenAIModel(OpenAIModelOptions | AzureOpenAIModelOptions)
    uid: '@microsoft/teams-ai.OpenAIModel.constructor'
    package: '@microsoft/teams-ai'
    summary: Creates a new `OpenAIModel` instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new OpenAIModel(options: OpenAIModelOptions | AzureOpenAIModelOptions)'
      parameters:
        - id: options
          type: >-
            <xref uid="@microsoft/teams-ai.OpenAIModelOptions" /> | <xref
            uid="@microsoft/teams-ai.AzureOpenAIModelOptions" />
          description: Options for configuring the model client.
properties:
  - name: events
    uid: '@microsoft/teams-ai.OpenAIModel.events'
    package: '@microsoft/teams-ai'
    summary: Events emitted by the model.
    fullName: events
    remarks: ''
    isDeprecated: false
    syntax:
      content: PromptCompletionModelEmitter events
      return:
        description: The events emitted by the model.
        type: <xref uid="@microsoft/teams-ai.PromptCompletionModelEmitter" />
  - name: options
    uid: '@microsoft/teams-ai.OpenAIModel.options'
    package: '@microsoft/teams-ai'
    summary: Options the client was configured with.
    fullName: options
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'options: OpenAIModelOptions | AzureOpenAIModelOptions'
      return:
        description: ''
        type: >-
          <xref uid="@microsoft/teams-ai.OpenAIModelOptions" /> | <xref
          uid="@microsoft/teams-ai.AzureOpenAIModelOptions" />
methods:
  - name: >-
      completePrompt(TurnContext, Memory, PromptFunctions, Tokenizer,
      PromptTemplate)
    uid: '@microsoft/teams-ai.OpenAIModel.completePrompt'
    package: '@microsoft/teams-ai'
    summary: Completes a prompt using OpenAI or Azure OpenAI.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function completePrompt(context: TurnContext, memory: Memory, functions:
        PromptFunctions, tokenizer: Tokenizer, template: PromptTemplate):
        Promise<PromptResponse<string>>
      parameters:
        - id: context
          type: TurnContext
          description: Current turn context.
        - id: memory
          type: <xref uid="@microsoft/teams-ai.Memory" />
          description: An interface for accessing state values.
        - id: functions
          type: <xref uid="@microsoft/teams-ai.PromptFunctions" />
          description: Functions to use when rendering the prompt.
        - id: tokenizer
          type: <xref uid="@microsoft/teams-ai.Tokenizer" />
          description: Tokenizer to use when rendering the prompt.
        - id: template
          type: <xref uid="@microsoft/teams-ai.PromptTemplate" />
          description: Prompt template to complete.
      return:
        description: A `PromptResponse` with the status and message.
        type: Promise&lt;PromptResponse&lt;string&gt;&gt;
