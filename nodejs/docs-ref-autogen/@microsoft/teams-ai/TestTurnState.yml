### YamlMime:TSType
name: TestTurnState
uid: '@microsoft/teams-ai.TestTurnState'
package: '@microsoft/teams-ai'
summary: A test version of the TurnState class used by unit tests.
fullName: TestTurnState
remarks: ''
isDeprecated: false
type: class
properties:
  - name: conversation
    uid: '@microsoft/teams-ai.TestTurnState.conversation'
    package: '@microsoft/teams-ai'
    summary: Accessor for the conversation state.
    fullName: conversation
    remarks: ''
    isDeprecated: false
    syntax:
      content: TConversationState conversation
      return:
        description: ''
        type: TConversationState
  - name: isLoaded
    uid: '@microsoft/teams-ai.TestTurnState.isLoaded'
    package: '@microsoft/teams-ai'
    summary: >-
      Gets a value indicating whether the applications turn state has been
      loaded.
    fullName: isLoaded
    remarks: ''
    isDeprecated: false
    syntax:
      content: boolean isLoaded
      return:
        description: ''
        type: boolean
  - name: temp
    uid: '@microsoft/teams-ai.TestTurnState.temp'
    package: '@microsoft/teams-ai'
    summary: Accessor for the temp state.
    fullName: temp
    remarks: ''
    isDeprecated: false
    syntax:
      content: TTempState temp
      return:
        description: ''
        type: TTempState
  - name: user
    uid: '@microsoft/teams-ai.TestTurnState.user'
    package: '@microsoft/teams-ai'
    summary: Accessor for the user state.
    fullName: user
    remarks: ''
    isDeprecated: false
    syntax:
      content: TUserState user
      return:
        description: ''
        type: TUserState
inheritedMethods:
  - name: deleteConversationState()
    uid: '@microsoft/teams-ai.TestTurnState.deleteConversationState'
    package: '@microsoft/teams-ai'
    summary: Deletes the state object for the current conversation from storage.
    remarks: ''
    isDeprecated: false
    syntax:
      content: function deleteConversationState()
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TurnState.deleteConversationState](xref:@microsoft/teams-ai.TurnState.deleteConversationState)
  - name: deleteTempState()
    uid: '@microsoft/teams-ai.TestTurnState.deleteTempState'
    package: '@microsoft/teams-ai'
    summary: Deletes the temp state object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: function deleteTempState()
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TurnState.deleteTempState](xref:@microsoft/teams-ai.TurnState.deleteTempState)
  - name: deleteUserState()
    uid: '@microsoft/teams-ai.TestTurnState.deleteUserState'
    package: '@microsoft/teams-ai'
    summary: Deletes the state object for the current user from storage.
    remarks: ''
    isDeprecated: false
    syntax:
      content: function deleteUserState()
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TurnState.deleteUserState](xref:@microsoft/teams-ai.TurnState.deleteUserState)
  - name: deleteValue(string)
    uid: '@microsoft/teams-ai.TestTurnState.deleteValue'
    package: '@microsoft/teams-ai'
    summary: Deletes a value from the memory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function deleteValue(path: string)'
      parameters:
        - id: path
          type: string
          description: >-
            Path to the value to delete in the form of `[scope].property`. If
            scope is omitted, the value is deleted from the temporary scope.
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TurnState.deleteValue](xref:@microsoft/teams-ai.TurnState.deleteValue)
  - name: getScope(string)
    uid: '@microsoft/teams-ai.TestTurnState.getScope'
    package: '@microsoft/teams-ai'
    summary: Gets a state scope by name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getScope(scope: string): undefined | TurnStateEntry'
      parameters:
        - id: scope
          type: string
          description: >-
            Name of the state scope to return. (i.e. 'conversation', 'user', or
            'temp')
      return:
        description: The state scope or undefined if not found.
        type: undefined | <xref uid="@microsoft/teams-ai.TurnStateEntry" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TurnState.getScope](xref:@microsoft/teams-ai.TurnState.getScope)
  - name: getValue<TValue>(string)
    uid: '@microsoft/teams-ai.TestTurnState.getValue'
    package: '@microsoft/teams-ai'
    summary: Retrieves a value from the memory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getValue<TValue>(path: string): TValue'
      parameters:
        - id: path
          type: string
          description: >-
            Path to the value to retrieve in the form of `[scope].property`. If
            scope is omitted, the value is retrieved from the temporary scope.
      return:
        description: The value or undefined if not found.
        type: TValue
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TurnState.getValue](xref:@microsoft/teams-ai.TurnState.getValue)
  - name: hasValue(string)
    uid: '@microsoft/teams-ai.TestTurnState.hasValue'
    package: '@microsoft/teams-ai'
    summary: Checks if a value exists in the memory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function hasValue(path: string): boolean'
      parameters:
        - id: path
          type: string
          description: >-
            Path to the value to check in the form of `[scope].property`. If
            scope is omitted, the value is checked in the temporary scope.
      return:
        description: True if the value exists, false otherwise.
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TurnState.hasValue](xref:@microsoft/teams-ai.TurnState.hasValue)
  - name: load(TurnContext, Storage)
    uid: '@microsoft/teams-ai.TestTurnState.load'
    package: '@microsoft/teams-ai'
    summary: Loads all of the state scopes for the current turn.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function load(context: TurnContext, storage?: Storage): Promise<boolean>'
      parameters:
        - id: context
          type: TurnContext
          description: Context for the current turn of conversation with the user.
        - id: storage
          type: Storage
          description: Optional. Storage provider to load state scopes from.
      return:
        description: True if the states needed to be loaded.
        type: Promise&lt;boolean&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TurnState.load](xref:@microsoft/teams-ai.TurnState.load)
  - name: save(TurnContext, Storage)
    uid: '@microsoft/teams-ai.TestTurnState.save'
    package: '@microsoft/teams-ai'
    summary: Saves all of the state scopes for the current turn.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function save(context: TurnContext, storage?: Storage): Promise<void>'
      parameters:
        - id: context
          type: TurnContext
          description: Context for the current turn of conversation with the user.
        - id: storage
          type: Storage
          description: Optional. Storage provider to save state scopes to.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TurnState.save](xref:@microsoft/teams-ai.TurnState.save)
  - name: setValue(string, unknown)
    uid: '@microsoft/teams-ai.TestTurnState.setValue'
    package: '@microsoft/teams-ai'
    summary: Assigns a value to the memory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setValue(path: string, value: unknown)'
      parameters:
        - id: path
          type: string
          description: >-
            Path to the value to assign in the form of `[scope].property`. If
            scope is omitted, the value is assigned to the temporary scope.
        - id: value
          type: unknown
          description: Value to assign.
    inheritanceDescription: >-
      <b>Inherited From</b>
      [TurnState.setValue](xref:@microsoft/teams-ai.TurnState.setValue)
methods:
  - name: >-
      create(TurnContext, { conversation?: Record<string, any>, temp?:
      Record<string, any>, user?: Record<string, any> })
    uid: '@microsoft/teams-ai.TestTurnState.create'
    package: '@microsoft/teams-ai'
    summary: Creates a new `TestTurnState` instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function create(context: TurnContext, testState?: {
        conversation?: Record<string, any>, temp?: Record<string, any>, user?:
        Record<string, any> }): Promise<TestTurnState>
      parameters:
        - id: context
          type: TurnContext
          description: Context for the current turn of conversation with the user.
        - id: testState
          type: >-
            { conversation?: Record&lt;string, any&gt;, temp?: Record&lt;string,
            any&gt;, user?: Record&lt;string, any&gt; }
          description: Optional. State to initialize the new instance with.
      return:
        description: Created `TestTurnState` instance.
        type: Promise&lt;<xref uid="@microsoft/teams-ai.TestTurnState" />&gt;
extends: <xref uid="@microsoft/teams-ai.TurnState" />
