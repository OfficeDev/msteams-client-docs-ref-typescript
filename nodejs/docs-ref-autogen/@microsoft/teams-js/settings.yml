### YamlMime:TSPackage
uid: '@microsoft/teams-js.settings'
name: settings
summary: ''
type: module
typeAliases:
  - '@microsoft/teams-js.settings.getSettingsCallbackFunctionType'
  - '@microsoft/teams-js.settings.registerOnRemoveHandlerFunctionType'
  - '@microsoft/teams-js.settings.registerOnSaveHandlerFunctionType'
  - '@microsoft/teams-js.settings.setSettingsOnCompleteFunctionType'
package: '@microsoft/teams-js'
functions:
  - name: getSettings(getSettingsCallbackFunctionType)
    uid: '@microsoft/teams-js.settings.getSettings'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.getConfig():
      Promise\<InstanceConfig\>](xref:@microsoft/teams-js.pages.getConfig)
      instead.


      Gets the settings for the current instance.
    syntax:
      content: 'function getSettings(callback: getSettingsCallbackFunctionType)'
      parameters:
        - id: callback
          type: >-
            <xref
            uid="@microsoft/teams-js.settings.getSettingsCallbackFunctionType"
            />
          description: >-
            The callback to invoke when the
            [Settings](xref:@microsoft/teams-js.pages.InstanceConfig) object is
            retrieved.
  - name: registerOnRemoveHandler(registerOnRemoveHandlerFunctionType)
    uid: '@microsoft/teams-js.settings.registerOnRemoveHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use
      [pages.config.registerOnRemoveHandler(handler:
      registerOnRemoveHandlerFunctionType):
      void](xref:@microsoft/teams-js.pages.config.registerOnRemoveHandler)
      instead.


      Registers a handler for user attempts to remove content. This handler
      should be used

      to remove the underlying resource powering the content.

      The object passed to the handler must be used to indicate whether to
      proceed with the removal.

      Only one handler may be registered at a time. Subsequent registrations
      will override the first.
    syntax:
      content: >-
        function registerOnRemoveHandler(handler:
        registerOnRemoveHandlerFunctionType)
      parameters:
        - id: handler
          type: >-
            <xref
            uid="@microsoft/teams-js.settings.registerOnRemoveHandlerFunctionType"
            />
          description: The handler to invoke when the user selects the remove button.
  - name: registerOnSaveHandler(registerOnSaveHandlerFunctionType)
    uid: '@microsoft/teams-js.settings.registerOnSaveHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use
      [pages.config.registerOnSaveHandler(handler:
      registerOnSaveHandlerFunctionType):
      void](xref:@microsoft/teams-js.pages.config.registerOnSaveHandler)
      instead.


      Registers a handler for when the user attempts to save the settings. This
      handler should be used

      to create or update the underlying resource powering the content.

      The object passed to the handler must be used to notify whether to proceed
      with the save.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    syntax:
      content: >-
        function registerOnSaveHandler(handler:
        registerOnSaveHandlerFunctionType)
      parameters:
        - id: handler
          type: >-
            <xref
            uid="@microsoft/teams-js.settings.registerOnSaveHandlerFunctionType"
            />
          description: The handler to invoke when the user selects the save button.
  - name: setSettings(InstanceConfig, setSettingsOnCompleteFunctionType)
    uid: '@microsoft/teams-js.settings.setSettings'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.config.setConfig(instanceSettings:
      Config): Promise\<void\>](xref:@microsoft/teams-js.pages.config.setConfig)
      instead.


      Sets the settings for the current instance.

      This is an asynchronous operation; calls to getSettings are not guaranteed
      to reflect the changed state.
    syntax:
      content: >-
        function setSettings(instanceSettings: InstanceConfig, onComplete?:
        setSettingsOnCompleteFunctionType)
      parameters:
        - id: instanceSettings
          type: <xref uid="@microsoft/teams-js.pages.InstanceConfig" />
          description: ''
        - id: onComplete
          type: >-
            <xref
            uid="@microsoft/teams-js.settings.setSettingsOnCompleteFunctionType"
            />
          description: ''
  - name: setValidityState(boolean)
    uid: '@microsoft/teams-js.settings.setValidityState'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use
      [pages.config.setValidityState(validityState: boolean):
      void](xref:@microsoft/teams-js.pages.config.setValidityState) instead.


      Sets the validity state for the settings.

      The initial value is false, so the user cannot save the settings until
      this is called with true.
    syntax:
      content: 'function setValidityState(validityState: boolean)'
      parameters:
        - id: validityState
          type: boolean
          description: Indicates whether the save or remove button is enabled for the user.
