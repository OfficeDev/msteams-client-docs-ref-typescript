### YamlMime:TSPackage
uid: '@microsoft/teams-js'
name: '@microsoft/teams-js'
summary: ''
type: package
interfaces:
  - '@microsoft/teams-js.app.AppHostInfo'
  - '@microsoft/teams-js.app.AppInfo'
  - '@microsoft/teams-js.app.ChannelInfo'
  - '@microsoft/teams-js.app.ChatInfo'
  - '@microsoft/teams-js.app.Context'
  - '@microsoft/teams-js.app.IExpectedFailureRequest'
  - '@microsoft/teams-js.app.IFailedRequest'
  - '@microsoft/teams-js.app.MeetingInfo'
  - '@microsoft/teams-js.app.NotifySuccessResponse'
  - '@microsoft/teams-js.app.PageInfo'
  - '@microsoft/teams-js.app.SharePointSiteInfo'
  - '@microsoft/teams-js.app.TeamInfo'
  - '@microsoft/teams-js.app.TenantInfo'
  - '@microsoft/teams-js.app.UserInfo'
  - '@microsoft/teams-js.appInstallDialog.OpenAppInstallDialogParams'
  - '@microsoft/teams-js.authentication.AuthenticatePopUpParameters'
  - '@microsoft/teams-js.authentication.AuthTokenRequestParameters'
  - '@microsoft/teams-js.authentication.LegacyCallBacks'
  - '@microsoft/teams-js.barCode.BarCodeConfig'
  - '@microsoft/teams-js.calendar.ComposeMeetingParams'
  - '@microsoft/teams-js.calendar.OpenCalendarItemParams'
  - '@microsoft/teams-js.call.StartCallParams'
  - '@microsoft/teams-js.chat.OpenGroupChatRequest'
  - '@microsoft/teams-js.chat.OpenSingleChatRequest'
  - '@microsoft/teams-js.dialog.ISdkResponse'
  - '@microsoft/teams-js.geoLocation.Location'
  - '@microsoft/teams-js.location.Location'
  - '@microsoft/teams-js.location.LocationProps'
  - '@microsoft/teams-js.mail.ComposeNewParams'
  - '@microsoft/teams-js.mail.ComposeReplyOrForwardParams'
  - '@microsoft/teams-js.mail.handoff.ComposeMailParamsWithHandoff'
  - '@microsoft/teams-js.mail.OpenMailItemParams'
  - '@microsoft/teams-js.media.AssembleAttachment'
  - '@microsoft/teams-js.media.AudioProps'
  - '@microsoft/teams-js.media.BarCodeConfig'
  - '@microsoft/teams-js.media.ImageProps'
  - '@microsoft/teams-js.media.ImageUri'
  - '@microsoft/teams-js.media.MediaChunk'
  - '@microsoft/teams-js.media.MediaInputs'
  - '@microsoft/teams-js.media.MediaResult'
  - '@microsoft/teams-js.media.VideoAndImageProps'
  - '@microsoft/teams-js.media.VideoControllerCallback'
  - '@microsoft/teams-js.media.VideoProps'
  - '@microsoft/teams-js.meeting.IAppContentStageSharingCapabilities'
  - '@microsoft/teams-js.meeting.IAppContentStageSharingState'
  - '@microsoft/teams-js.meeting.IShareAppContentToStageOptions'
  - '@microsoft/teams-js.meeting.ISpeakingState'
  - '@microsoft/teams-js.meeting.JoinMeetingParams'
  - '@microsoft/teams-js.meeting.LiveStreamState'
  - '@microsoft/teams-js.menus.ActionMenuParameters'
  - '@microsoft/teams-js.pages.AppNavigationParameters'
  - '@microsoft/teams-js.pages.config.RemoveEvent'
  - '@microsoft/teams-js.pages.config.SaveEvent'
  - '@microsoft/teams-js.pages.config.SaveParameters'
  - '@microsoft/teams-js.pages.currentApp.NavigateWithinAppParams'
  - '@microsoft/teams-js.pages.InstanceConfig'
  - '@microsoft/teams-js.pages.NavigateToAppParams'
  - '@microsoft/teams-js.people.PeoplePickerInputs'
  - '@microsoft/teams-js.people.PeoplePickerResult'
  - '@microsoft/teams-js.profile.Persona'
  - '@microsoft/teams-js.profile.ShowProfileRequest'
  - '@microsoft/teams-js.search.SearchQuery'
  - '@microsoft/teams-js.sharing.history.IContentResponse'
  - '@microsoft/teams-js.sharing.IShareRequest'
  - '@microsoft/teams-js.sharing.IURLContent'
  - '@microsoft/teams-js.stageView.StageViewParams'
  - '@microsoft/teams-js.thirdPartyCloudStorage.AssembleAttachment'
  - '@microsoft/teams-js.thirdPartyCloudStorage.DragAndDropFileCallback'
  - '@microsoft/teams-js.thirdPartyCloudStorage.FileChunk'
  - '@microsoft/teams-js.thirdPartyCloudStorage.FileResult'
  - '@microsoft/teams-js.thirdPartyCloudStorage.FilesFor3PStorage'
  - '@microsoft/teams-js.videoEffects.VideoBufferData'
  - '@microsoft/teams-js.videoEffects.VideoFrame'
  - '@microsoft/teams-js.videoEffects.VideoFrameConfig'
  - '@microsoft/teams-js.ActionInfo'
  - '@microsoft/teams-js.AdaptiveCardDialogInfo'
  - '@microsoft/teams-js.AdaptiveCardVersion'
  - '@microsoft/teams-js.BaseActionObject'
  - '@microsoft/teams-js.BotAdaptiveCardDialogInfo'
  - '@microsoft/teams-js.BotUrlDialogInfo'
  - '@microsoft/teams-js.Context'
  - '@microsoft/teams-js.DeepLinkParameters'
  - '@microsoft/teams-js.DialogInfo'
  - '@microsoft/teams-js.DialogSize'
  - '@microsoft/teams-js.FrameInfo'
  - '@microsoft/teams-js.HostToAppPerformanceMetrics'
  - '@microsoft/teams-js.IAppWindow'
  - '@microsoft/teams-js.ISerializable'
  - '@microsoft/teams-js.LoadContext'
  - '@microsoft/teams-js.LocaleInfo'
  - '@microsoft/teams-js.M365ContentAction'
  - '@microsoft/teams-js.ResumeContext'
  - '@microsoft/teams-js.RuntimeFeatureFlags'
  - '@microsoft/teams-js.SdkError'
  - '@microsoft/teams-js.SecondaryId'
  - '@microsoft/teams-js.ShareDeepLinkParameters'
  - '@microsoft/teams-js.TabInformation'
  - '@microsoft/teams-js.TabInstance'
  - '@microsoft/teams-js.TabInstanceParameters'
  - '@microsoft/teams-js.TeamInformation'
  - '@microsoft/teams-js.UrlDialogInfo'
enums:
  - '@microsoft/teams-js.app.ExpectedFailureReason'
  - '@microsoft/teams-js.app.FailedReason'
  - '@microsoft/teams-js.call.CallModalities'
  - '@microsoft/teams-js.mail.ComposeMailType'
  - '@microsoft/teams-js.media.CameraStartMode'
  - '@microsoft/teams-js.media.FileFormat'
  - '@microsoft/teams-js.media.ImageOutputFormats'
  - '@microsoft/teams-js.media.ImageUriType'
  - '@microsoft/teams-js.media.MediaControllerEvent'
  - '@microsoft/teams-js.media.MediaType'
  - '@microsoft/teams-js.media.Source'
  - '@microsoft/teams-js.meeting.EventActionSource'
  - '@microsoft/teams-js.meeting.SharingProtocol'
  - '@microsoft/teams-js.menus.DisplayMode'
  - '@microsoft/teams-js.pages.ReturnFocusType'
  - '@microsoft/teams-js.stageView.StageViewOpenMode'
  - '@microsoft/teams-js.videoEffects.EffectChangeType'
  - '@microsoft/teams-js.videoEffects.EffectFailureReason'
  - '@microsoft/teams-js.videoEffects.VideoFrameFormat'
  - '@microsoft/teams-js.ActionObjectType'
  - '@microsoft/teams-js.ChannelType'
  - '@microsoft/teams-js.DialogDimension'
  - '@microsoft/teams-js.ErrorCode'
  - '@microsoft/teams-js.FileOpenPreference'
  - '@microsoft/teams-js.FrameContexts'
  - '@microsoft/teams-js.HostClientType'
  - '@microsoft/teams-js.HostName'
  - '@microsoft/teams-js.RenderingSurfaces'
  - '@microsoft/teams-js.SecondaryM365ContentIdName'
  - '@microsoft/teams-js.TeamType'
  - '@microsoft/teams-js.UserTeamRole'
typeAliases:
  - '@microsoft/teams-js.app.HostToAppPerformanceMetricsHandler'
  - >-
    @microsoft/teams-js.app.lifecycle.registerBeforeSuspendOrTerminateHandlerFunctionType
  - '@microsoft/teams-js.app.lifecycle.registerOnResumeHandlerFunctionType'
  - '@microsoft/teams-js.app.themeHandler'
  - '@microsoft/teams-js.authentication.AuthenticateParameters'
  - '@microsoft/teams-js.authentication.AuthTokenRequest'
  - '@microsoft/teams-js.dialog.DialogSubmitHandler'
  - '@microsoft/teams-js.dialog.PostMessageChannel'
  - '@microsoft/teams-js.location.getLocationCallbackFunctionType'
  - '@microsoft/teams-js.location.showLocationCallbackFunctionType'
  - '@microsoft/teams-js.mail.ComposeMailParams'
  - '@microsoft/teams-js.media.captureImageCallbackFunctionType'
  - '@microsoft/teams-js.media.errorCallbackFunctionType'
  - '@microsoft/teams-js.media.getMediaCallbackFunctionType'
  - '@microsoft/teams-js.media.scanBarCodeCallbackFunctionType'
  - '@microsoft/teams-js.media.selectMediaCallbackFunctionType'
  - '@microsoft/teams-js.meeting.errorCallbackFunctionType'
  - '@microsoft/teams-js.meeting.getAppContentCallbackFunctionType'
  - '@microsoft/teams-js.meeting.getAppContentStageCallbackFunctionType'
  - '@microsoft/teams-js.meeting.getLiveStreamStateCallbackFunctionType'
  - '@microsoft/teams-js.meeting.liveStreamErrorCallbackFunctionType'
  - '@microsoft/teams-js.meeting.registerLiveStreamChangedHandlerFunctionType'
  - '@microsoft/teams-js.meeting.registerSpeakingStateChangeHandlerFunctionType'
  - '@microsoft/teams-js.pages.backButtonHandlerFunctionType'
  - '@microsoft/teams-js.pages.fullScreenChangeFunctionType'
  - '@microsoft/teams-js.pages.handlerFunctionType'
  - '@microsoft/teams-js.pages.removeEventType'
  - '@microsoft/teams-js.pages.saveEventType'
  - '@microsoft/teams-js.people.selectPeopleCallbackFunctionType'
  - '@microsoft/teams-js.profile.Modality'
  - '@microsoft/teams-js.profile.PersonaIdentifiers'
  - '@microsoft/teams-js.profile.TriggerType'
  - '@microsoft/teams-js.search.SearchQueryHandler'
  - '@microsoft/teams-js.settings.getSettingsCallbackFunctionType'
  - '@microsoft/teams-js.settings.registerOnRemoveHandlerFunctionType'
  - '@microsoft/teams-js.settings.registerOnSaveHandlerFunctionType'
  - '@microsoft/teams-js.settings.RemoveEvent'
  - '@microsoft/teams-js.settings.SaveEvent'
  - '@microsoft/teams-js.settings.SaveParameters'
  - '@microsoft/teams-js.settings.setSettingsOnCompleteFunctionType'
  - '@microsoft/teams-js.settings.Settings'
  - '@microsoft/teams-js.sharing.IShareRequestContentType'
  - '@microsoft/teams-js.sharing.shareWebContentCallbackFunctionType'
  - '@microsoft/teams-js.tasks.startTaskSubmitHandlerFunctionType'
  - '@microsoft/teams-js.teamsCore.readyToUnloadFunctionType'
  - '@microsoft/teams-js.teamsCore.registerBeforeUnloadHandlerFunctionType'
  - '@microsoft/teams-js.teamsCore.registerOnLoadHandlerFunctionType'
  - '@microsoft/teams-js.videoEffects.notifyErrorFunctionType'
  - '@microsoft/teams-js.videoEffects.notifyVideoFrameProcessedFunctionType'
  - '@microsoft/teams-js.videoEffects.RegisterForVideoFrameParameters'
  - '@microsoft/teams-js.videoEffects.VideoBufferHandler'
  - '@microsoft/teams-js.videoEffects.VideoEffectCallback'
  - '@microsoft/teams-js.videoEffects.VideoFrameData'
  - '@microsoft/teams-js.videoEffects.VideoFrameHandler'
  - '@microsoft/teams-js.FrameContext'
  - '@microsoft/teams-js.TaskInfo'
  - '@microsoft/teams-js.addEventListnerFunctionType'
  - '@microsoft/teams-js.callbackFunctionType'
  - '@microsoft/teams-js.executeDeepLinkOnCompleteFunctionType'
  - '@microsoft/teams-js.getContextCallbackFunctionType'
  - '@microsoft/teams-js.getTabInstancesCallbackFunctionType'
  - '@microsoft/teams-js.onCompleteFunctionType'
  - '@microsoft/teams-js.onCompleteHandlerFunctionType'
  - '@microsoft/teams-js.registerBackButtonHandlerFunctionType'
  - '@microsoft/teams-js.registerFullScreenHandlerFunctionType'
  - '@microsoft/teams-js.registerOnThemeChangeHandlerFunctionType'
classes:
  - '@microsoft/teams-js.liveShare.LiveShareHost'
  - '@microsoft/teams-js.media.File'
  - '@microsoft/teams-js.media.Media'
  - '@microsoft/teams-js.media.VideoController'
  - '@microsoft/teams-js.AppId'
  - '@microsoft/teams-js.ChildAppWindow'
  - '@microsoft/teams-js.EmailAddress'
  - '@microsoft/teams-js.ParentAppWindow'
  - '@microsoft/teams-js.ValidatedSafeString'
functions:
  - name: activateChildProxyingCommunication()
    uid: '@microsoft/teams-js.activateChildProxyingCommunication'
    package: '@microsoft/teams-js'
    summary: >-
      This function enables child proxying communication for apps that still
      needs it.
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      Child proxying is considered an insecure feature and will be removed in
      future releases.
    syntax:
      content: function activateChildProxyingCommunication()
  - name: enablePrintCapability()
    uid: '@microsoft/teams-js.enablePrintCapability'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [teamsCore.enablePrintCapability():
      void](xref:@microsoft/teams-js.teamsCore.enablePrintCapability) instead.


      Enable print capability to support printing page using Ctrl+P and cmd+P
    syntax:
      content: function enablePrintCapability()
  - name: executeDeepLink(string, executeDeepLinkOnCompleteFunctionType)
    uid: '@microsoft/teams-js.executeDeepLink'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      This function was previously used for opening various types of links. As
      of TeamsJS v2.0.0, it has been replaced with multiple different

      functions depending on the type of link:


      - Use
      [navigateToDefaultPage](xref:@microsoft/teams-js.pages.currentApp.navigateToDefaultPage)
      to navigate to the default page of your own app

      - Use [navigateTo](xref:@microsoft/teams-js.pages.currentApp.navigateTo)
      to navigate to a section of your own app

      - Use [navigateToApp](xref:@microsoft/teams-js.pages.navigateToApp) to
      navigate to other apps besides your own

      - Use [openLink](xref:@microsoft/teams-js.app.openLink) for opening deep
      links to other parts of the host (e.g., to chats or channels) or

      general-purpose links (e.g., to external websites).
    syntax:
      content: >-
        function executeDeepLink(deepLink: string, onComplete?:
        executeDeepLinkOnCompleteFunctionType)
      parameters:
        - id: deepLink
          type: string
          description: deep link.
        - id: onComplete
          type: >-
            <xref
            uid="@microsoft/teams-js.executeDeepLinkOnCompleteFunctionType" />
          description: ''
  - name: getAdaptiveCardSchemaVersion()
    uid: '@microsoft/teams-js.getAdaptiveCardSchemaVersion'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAdaptiveCardSchemaVersion(): AdaptiveCardVersion | undefined'
      return:
        description: >-
          The <code><xref:@microsoft/teams-js.AdaptiveCardVersion></code>
          representing the Adaptive Card schema

          version supported by the host, or undefined if the host does not
          support Adaptive Cards
        type: <xref uid="@microsoft/teams-js.AdaptiveCardVersion" /> | undefined
  - name: getContext(getContextCallbackFunctionType)
    uid: '@microsoft/teams-js.getContext'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [app.getContext():
      Promise\<app.Context\>](xref:@microsoft/teams-js.app.getContext) instead.


      Retrieves the current context the frame is running in.
    syntax:
      content: 'function getContext(callback: getContextCallbackFunctionType)'
      parameters:
        - id: callback
          type: <xref uid="@microsoft/teams-js.getContextCallbackFunctionType" />
          description: >-
            The callback to invoke when the
            [Context](xref:@microsoft/teams-js.Context) object is retrieved.
  - name: getCurrentFeatureFlagsState()
    uid: '@microsoft/teams-js.getCurrentFeatureFlagsState'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getCurrentFeatureFlagsState(): RuntimeFeatureFlags'
      return:
        description: The current state of the runtime feature flags.
        type: <xref uid="@microsoft/teams-js.RuntimeFeatureFlags" />
  - name: >-
      getMruTabInstances(getTabInstancesCallbackFunctionType,
      TabInstanceParameters)
    uid: '@microsoft/teams-js.getMruTabInstances'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use
      [pages.tabs.getMruTabInstances(tabInstanceParameters?:
      TabInstanceParameters):
      Promise\<TabInformation\>](xref:@microsoft/teams-js.pages.tabs.getMruTabInstances)
      instead.


      Allows an app to retrieve the most recently used tabs for this user.
    syntax:
      content: >-
        function getMruTabInstances(callback:
        getTabInstancesCallbackFunctionType, tabInstanceParameters?:
        TabInstanceParameters)
      parameters:
        - id: callback
          type: >-
            <xref uid="@microsoft/teams-js.getTabInstancesCallbackFunctionType"
            />
          description: >-
            The callback to invoke when the
            [TabInformation](xref:@microsoft/teams-js.TabInformation) object is
            retrieved.
        - id: tabInstanceParameters
          type: <xref uid="@microsoft/teams-js.TabInstanceParameters" />
          description: OPTIONAL Ignored, kept for future use
  - name: >-
      getTabInstances(getTabInstancesCallbackFunctionType,
      TabInstanceParameters)
    uid: '@microsoft/teams-js.getTabInstances'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use
      [pages.tabs.getTabInstances(tabInstanceParameters?:
      TabInstanceParameters):
      Promise\<TabInformation\>](xref:@microsoft/teams-js.pages.tabs.getTabInstances)
      instead.


      Allows an app to retrieve for this user tabs that are owned by this app.

      If no TabInstanceParameters are passed, the app defaults to favorite teams
      and favorite channels.
    syntax:
      content: >-
        function getTabInstances(callback: getTabInstancesCallbackFunctionType,
        tabInstanceParameters?: TabInstanceParameters)
      parameters:
        - id: callback
          type: >-
            <xref uid="@microsoft/teams-js.getTabInstancesCallbackFunctionType"
            />
          description: >-
            The callback to invoke when the
            [TabInstanceParameters](xref:@microsoft/teams-js.TabInstanceParameters)
            object is retrieved.
        - id: tabInstanceParameters
          type: <xref uid="@microsoft/teams-js.TabInstanceParameters" />
          description: >-
            OPTIONAL Flags that specify whether to scope call to favorite teams
            or channels.
  - name: initialize(callbackFunctionType, string[])
    uid: '@microsoft/teams-js.initialize'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [app.initialize(validMessageOrigins?:
      string[]): Promise\<void\>](xref:@microsoft/teams-js.app.initialize)
      instead.


      Initializes the library. This must be called before any other SDK calls

      but after the frame is loaded successfully.
    syntax:
      content: >-
        function initialize(callback?: callbackFunctionType,
        validMessageOrigins?: string[])
      parameters:
        - id: callback
          type: <xref uid="@microsoft/teams-js.callbackFunctionType" />
          description: >-
            Optionally specify a callback to invoke when Teams SDK has
            successfully initialized
        - id: validMessageOrigins
          type: string[]
          description: >-
            Optionally specify a list of cross-frame message origins. This
            parameter is used if you know that your app

            will be hosted on a custom domain (i.e., not a standard Microsoft
            365 host like Teams, Outlook, etc.) Most apps will never need

            to pass a value for this parameter.

            Any domains passed in the array must have the https: protocol on the
            string otherwise they will be ignored. Example:
            https://www.example.com
  - name: initializeWithFrameContext(FrameInfo, callbackFunctionType, string[])
    uid: '@microsoft/teams-js.initializeWithFrameContext'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use
      [pages.initializeWithFrameContext(frameInfo: FrameInfo, callback?:
      callbackFunctionType, validMessageOrigins?: string[],):
      void](xref:@microsoft/teams-js.pages.initializeWithFrameContext) instead.


      Initialize with FrameContext
    syntax:
      content: >-
        function initializeWithFrameContext(frameContext: FrameInfo, callback?:
        callbackFunctionType, validMessageOrigins?: string[])
      parameters:
        - id: frameContext
          type: <xref uid="@microsoft/teams-js.FrameInfo" />
          description: FrameContext information to be set
        - id: callback
          type: <xref uid="@microsoft/teams-js.callbackFunctionType" />
          description: >-
            The optional callback to be invoked be invoked after initilizing the
            frame context
        - id: validMessageOrigins
          type: string[]
          description: >-
            Optionally specify a list of cross frame message origins.

            They must have https: protocol otherwise they will be ignored.
            Example: https:www.example.com
  - name: navigateBack(onCompleteHandlerFunctionType)
    uid: '@microsoft/teams-js.navigateBack'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.backStack.navigateBack():
      Promise\<void\>](xref:@microsoft/teams-js.pages.backStack.navigateBack)
      instead.


      Navigates back in the Teams client.

      See registerBackButtonHandler for more information on when it's
      appropriate to use this method.
    syntax:
      content: 'function navigateBack(onComplete?: onCompleteHandlerFunctionType)'
      parameters:
        - id: onComplete
          type: <xref uid="@microsoft/teams-js.onCompleteHandlerFunctionType" />
          description: The callback to invoke when the action is complete.
  - name: navigateCrossDomain(string, onCompleteHandlerFunctionType)
    uid: '@microsoft/teams-js.navigateCrossDomain'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of 2.0.0, this API is deprecated and can be replaced by the standard
      JavaScript

      API, window.location.href, when navigating the app to a new cross-domain
      URL. Any URL

      that is redirected to must be listed in the validDomains block of the
      manifest. Please

      remove any calls to this API.
    syntax:
      content: >-
        function navigateCrossDomain(url: string, onComplete?:
        onCompleteHandlerFunctionType)
      parameters:
        - id: url
          type: string
          description: The URL to navigate the frame to.
        - id: onComplete
          type: <xref uid="@microsoft/teams-js.onCompleteHandlerFunctionType" />
          description: The callback to invoke when the action is complete.
  - name: navigateToTab(TabInstance, onCompleteHandlerFunctionType)
    uid: '@microsoft/teams-js.navigateToTab'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.tabs.navigateToTab(tabInstance:
      TabInstance):
      Promise\<void\>](xref:@microsoft/teams-js.pages.tabs.navigateToTab)
      instead.


      Navigates the Microsoft Teams app to the specified tab instance.
    syntax:
      content: >-
        function navigateToTab(tabInstance: TabInstance, onComplete?:
        onCompleteHandlerFunctionType)
      parameters:
        - id: tabInstance
          type: <xref uid="@microsoft/teams-js.TabInstance" />
          description: The tab instance to navigate to.
        - id: onComplete
          type: <xref uid="@microsoft/teams-js.onCompleteHandlerFunctionType" />
          description: The callback to invoke when the action is complete.
  - name: overwriteFeatureFlagsState(Partial<RuntimeFeatureFlags>)
    uid: '@microsoft/teams-js.overwriteFeatureFlagsState'
    package: '@microsoft/teams-js'
    summary: >-
      It overwrites all the feature flags in the runtime feature flags object
      with the new feature flags provided.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function overwriteFeatureFlagsState(newFeatureFlags:
        Partial<RuntimeFeatureFlags>): RuntimeFeatureFlags
      parameters:
        - id: newFeatureFlags
          type: >-
            Partial&lt;<xref uid="@microsoft/teams-js.RuntimeFeatureFlags"
            />&gt;
          description: The new feature flags to set.
      return:
        description: The current state of the runtime feature flags.
        type: <xref uid="@microsoft/teams-js.RuntimeFeatureFlags" />
  - name: print()
    uid: '@microsoft/teams-js.print'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [teamsCore.print():
      void](xref:@microsoft/teams-js.teamsCore.print) instead.


      Default print handler
    syntax:
      content: function print()
  - name: registerAppButtonClickHandler(callbackFunctionType)
    uid: '@microsoft/teams-js.registerAppButtonClickHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.appButton.onClick(handler:
      callbackFunctionType):
      void](xref:@microsoft/teams-js.pages.appButton.onClick) instead.


      Registers a handler for clicking the app button.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    syntax:
      content: 'function registerAppButtonClickHandler(handler: callbackFunctionType)'
      parameters:
        - id: handler
          type: <xref uid="@microsoft/teams-js.callbackFunctionType" />
          description: >-
            The handler to invoke when the personal app button is clicked in the
            app bar.
  - name: registerAppButtonHoverEnterHandler(callbackFunctionType)
    uid: '@microsoft/teams-js.registerAppButtonHoverEnterHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.appButton.onHoverEnter(handler:
      callbackFunctionType):
      void](xref:@microsoft/teams-js.pages.appButton.onHoverEnter) instead.


      Registers a handler for entering hover of the app button.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    syntax:
      content: >-
        function registerAppButtonHoverEnterHandler(handler:
        callbackFunctionType)
      parameters:
        - id: handler
          type: <xref uid="@microsoft/teams-js.callbackFunctionType" />
          description: >-
            The handler to invoke when entering hover of the personal app button
            in the app bar.
  - name: registerAppButtonHoverLeaveHandler(callbackFunctionType)
    uid: '@microsoft/teams-js.registerAppButtonHoverLeaveHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.appButton.onHoverLeave(handler:
      callbackFunctionType):
      void](xref:@microsoft/teams-js.pages.appButton.onHoverLeave) instead.


      Registers a handler for exiting hover of the app button.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    syntax:
      content: >-
        function registerAppButtonHoverLeaveHandler(handler:
        callbackFunctionType)
      parameters:
        - id: handler
          type: <xref uid="@microsoft/teams-js.callbackFunctionType" />
          description: >-
            The handler to invoke when exiting hover of the personal app button
            in the app bar.
  - name: registerBackButtonHandler(registerBackButtonHandlerFunctionType)
    uid: '@microsoft/teams-js.registerBackButtonHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use
      [pages.backStack.registerBackButtonHandler(handler:
      registerBackButtonHandlerFunctionType):
      void](xref:@microsoft/teams-js.pages.backStack.registerBackButtonHandler)
      instead.


      Registers a handler for user presses of the Team client's back button.
      Experiences that maintain an internal

      navigation stack should use this handler to navigate the user back within
      their frame. If an app finds

      that after running its back button handler it cannot handle the event it
      should call the navigateBack

      method to ask the Teams client to handle it instead.
    syntax:
      content: >-
        function registerBackButtonHandler(handler:
        registerBackButtonHandlerFunctionType)
      parameters:
        - id: handler
          type: >-
            <xref
            uid="@microsoft/teams-js.registerBackButtonHandlerFunctionType" />
          description: >-
            The handler to invoke when the user presses their Team client's back
            button.
  - name: registerChangeSettingsHandler(callbackFunctionType)
    uid: '@microsoft/teams-js.registerChangeSettingsHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use
      [pages.config.registerChangeConfigHandler(handler: callbackFunctionType):
      void](xref:@microsoft/teams-js.pages.config.registerChangeConfigHandler)
      instead.


      Registers a handler for when the user reconfigurated tab.
    syntax:
      content: 'function registerChangeSettingsHandler(handler: callbackFunctionType)'
      parameters:
        - id: handler
          type: <xref uid="@microsoft/teams-js.callbackFunctionType" />
          description: The handler to invoke when the user click on Settings.
  - name: registerFullScreenHandler(registerFullScreenHandlerFunctionType)
    uid: '@microsoft/teams-js.registerFullScreenHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.registerFullScreenHandler(handler:
      registerFullScreenHandlerFunctionType):
      void](xref:@microsoft/teams-js.pages.registerFullScreenHandler) instead.


      Registers a handler for changes from or to full-screen view for a tab.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    syntax:
      content: >-
        function registerFullScreenHandler(handler:
        registerFullScreenHandlerFunctionType)
      parameters:
        - id: handler
          type: >-
            <xref
            uid="@microsoft/teams-js.registerFullScreenHandlerFunctionType" />
          description: >-
            The handler to invoke when the user toggles full-screen view for a
            tab.
  - name: registerOnThemeChangeHandler(registerOnThemeChangeHandlerFunctionType)
    uid: '@microsoft/teams-js.registerOnThemeChangeHandler'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use
      [app.registerOnThemeChangeHandler(handler:
      registerOnThemeChangeHandlerFunctionType):
      void](xref:@microsoft/teams-js.app.registerOnThemeChangeHandler) instead.


      Registers a handler for theme changes.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.
    syntax:
      content: >-
        function registerOnThemeChangeHandler(handler:
        registerOnThemeChangeHandlerFunctionType)
      parameters:
        - id: handler
          type: >-
            <xref
            uid="@microsoft/teams-js.registerOnThemeChangeHandlerFunctionType"
            />
          description: The handler to invoke when the user changes their theme.
  - name: returnFocus(boolean)
    uid: '@microsoft/teams-js.returnFocus'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.returnFocus(navigateForward?:
      boolean): void](xref:@microsoft/teams-js.pages.returnFocus_1) instead.


      Return focus to the main Teams app. Will focus search bar if navigating
      foward and app bar if navigating back.
    syntax:
      content: 'function returnFocus(navigateForward?: boolean)'
      parameters:
        - id: navigateForward
          type: boolean
          description: Determines the direction to focus in teams app.
  - name: setFeatureFlagsState(RuntimeFeatureFlags)
    uid: '@microsoft/teams-js.setFeatureFlagsState'
    package: '@microsoft/teams-js'
    summary: It sets the runtime feature flags to the new feature flags provided.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setFeatureFlagsState(featureFlags: RuntimeFeatureFlags)'
      parameters:
        - id: featureFlags
          type: <xref uid="@microsoft/teams-js.RuntimeFeatureFlags" />
          description: The new feature flags to set.
  - name: setFrameContext(FrameInfo)
    uid: '@microsoft/teams-js.setFrameContext'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.setCurrentFrame(frameInfo:
      FrameInfo): void](xref:@microsoft/teams-js.pages.setCurrentFrame) instead.


      Set the current Frame Context
    syntax:
      content: 'function setFrameContext(frameContext: FrameInfo)'
      parameters:
        - id: frameContext
          type: <xref uid="@microsoft/teams-js.FrameInfo" />
          description: FrameContext information to be set
  - name: shareDeepLink(DeepLinkParameters)
    uid: '@microsoft/teams-js.shareDeepLink'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      As of TeamsJS v2.0.0, please use [pages.shareDeepLink(deepLinkParameters:
      DeepLinkParameters): void](xref:@microsoft/teams-js.pages.shareDeepLink)
      instead.


      Shares a deep link that a user can use to navigate back to a specific
      state in this page.
    syntax:
      content: 'function shareDeepLink(deepLinkParameters: DeepLinkParameters)'
      parameters:
        - id: deepLinkParameters
          type: <xref uid="@microsoft/teams-js.DeepLinkParameters" />
          description: ID and label for the link and fallback URL.
  - name: 'uploadCustomApp(Blob, (status: boolean, reason?: string) => void)'
    uid: '@microsoft/teams-js.uploadCustomApp'
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function uploadCustomApp(manifestBlob: Blob, onComplete?: (status:
        boolean, reason?: string) => void)
      parameters:
        - id: manifestBlob
          type: Blob
          description: ''
        - id: onComplete
          type: '(status: boolean, reason?: string) =&gt; void'
          description: ''
