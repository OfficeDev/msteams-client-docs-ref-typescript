### YamlMime:TSType
name: AppCredential
uid: '@microsoft/teamsfx.AppCredential'
package: '@microsoft/teamsfx'
summary: >+
  Represent Microsoft 365 tenant identity, and it is usually used when user is
  not involved like time-triggered automation job.


  **Example**


  ```typescript

  loadConfiguration(); // load configuration from environment variables

  const credential = new AppCredential();

  ```

fullName: AppCredential
remarks: Only works in in server side.
isDeprecated: false
type: class
constructors:
  - name: AppCredential(AuthenticationConfiguration)
    uid: '@microsoft/teamsfx.AppCredential.constructor_1'
    package: '@microsoft/teamsfx'
    summary: Constructor of AppCredential.
    remarks: Only works in in server side.
    isDeprecated: false
    syntax:
      content: 'new AppCredential(authConfig: AuthenticationConfiguration)'
      parameters:
        - id: authConfig
          type: <xref uid="@microsoft/teamsfx.AuthenticationConfiguration" />
          description: >-
            The authentication configuration. Use environment variables if not
            provided.
  - name: AppCredential(OnBehalfOfCredentialAuthConfig)
    uid: '@microsoft/teamsfx.AppCredential.constructor'
    package: '@microsoft/teamsfx'
    summary: Constructor of AppCredential.
    remarks: Only works in in server side.
    isDeprecated: false
    syntax:
      content: 'new AppCredential(authConfig: OnBehalfOfCredentialAuthConfig)'
      parameters:
        - id: authConfig
          type: <xref uid="@microsoft/teamsfx.OnBehalfOfCredentialAuthConfig" />
          description: The authentication configuration.
methods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@microsoft/teamsfx.AppCredential.getToken'
    package: '@microsoft/teamsfx'
    summary: >+
      Get access token for credential.


      **Example**


      ```typescript

      await credential.getToken(["User.Read.All"]) // Get Graph access token for
      single scope using string array

      await credential.getToken("User.Read.All") // Get Graph access token for
      single scope using string

      await credential.getToken(["User.Read.All", "Calendars.Read"]) // Get
      Graph access token for multiple scopes using string array

      await credential.getToken("User.Read.All Calendars.Read") // Get Graph
      access token for multiple scopes using space-separated string

      await credential.getToken("https://graph.microsoft.com/User.Read.All") //
      Get Graph access token with full resource URI

      await credential.getToken(["https://outlook.office.com/Mail.Read"]) // Get
      Outlook access token

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<null | AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/core-auth.GetTokenOptions" />
          description: >-
            The options used to configure any requests this TokenCredential
            implementation might make.
      return:
        description: |-
          Access token with expected scopes.
          Throw error if get access token failed.
        type: Promise&lt;null | <xref uid="@azure/core-auth.AccessToken" />&gt;
