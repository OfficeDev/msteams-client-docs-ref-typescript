### YamlMime:TSType
name: OnBehalfOfUserCredential
uid: '@microsoft/teamsfx.OnBehalfOfUserCredential'
package: '@microsoft/teamsfx'
summary: >+
  Represent on-behalf-of flow to get user identity, and it is designed to be
  used in server side.


  **Example**


  ```typescript

  const credential = new OnBehalfOfUserCredential(ssoToken);

  ```

fullName: OnBehalfOfUserCredential
remarks: Can only be used in server side.
isDeprecated: false
type: class
constructors:
  - name: OnBehalfOfUserCredential(string, AuthenticationConfiguration)
    uid: '@microsoft/teamsfx.OnBehalfOfUserCredential.constructor_1'
    package: '@microsoft/teamsfx'
    summary: Constructor of OnBehalfOfUserCredential
    remarks: Only works in in server side.
    isDeprecated: false
    syntax:
      content: >-
        new OnBehalfOfUserCredential(ssoToken: string, config:
        AuthenticationConfiguration)
      parameters:
        - id: ssoToken
          type: string
          description: User token provided by Teams SSO feature.
        - id: config
          type: <xref uid="@microsoft/teamsfx.AuthenticationConfiguration" />
          description: >-
            The authentication configuration. Use environment variables if not
            provided.
  - name: OnBehalfOfUserCredential(string, OnBehalfOfCredentialAuthConfig)
    uid: '@microsoft/teamsfx.OnBehalfOfUserCredential.constructor'
    package: '@microsoft/teamsfx'
    summary: Constructor of OnBehalfOfUserCredential
    remarks: Only works in in server side.
    isDeprecated: false
    syntax:
      content: >-
        new OnBehalfOfUserCredential(ssoToken: string, config:
        OnBehalfOfCredentialAuthConfig)
      parameters:
        - id: ssoToken
          type: string
          description: User token provided by Teams SSO feature.
        - id: config
          type: <xref uid="@microsoft/teamsfx.OnBehalfOfCredentialAuthConfig" />
          description: The authentication configuration.
methods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@microsoft/teamsfx.OnBehalfOfUserCredential.getToken'
    package: '@microsoft/teamsfx'
    summary: >+
      Get access token from credential.


      **Example**


      ```typescript

      await credential.getToken([]) // Get SSO token using empty string array

      await credential.getToken("") // Get SSO token using empty string

      await credential.getToken([".default"]) // Get Graph access token with
      default scope using string array

      await credential.getToken(".default") // Get Graph access token with
      default scope using string

      await credential.getToken(["User.Read"]) // Get Graph access token for
      single scope using string array

      await credential.getToken("User.Read") // Get Graph access token for
      single scope using string

      await credential.getToken(["User.Read", "Application.Read.All"]) // Get
      Graph access token for multiple scopes using string array

      await credential.getToken("User.Read Application.Read.All") // Get Graph
      access token for multiple scopes using space-separated string

      await credential.getToken("https://graph.microsoft.com/User.Read") // Get
      Graph access token with full resource URI

      await credential.getToken(["https://outlook.office.com/Mail.Read"]) // Get
      Outlook access token

      ```

    remarks: |-
      If scopes is empty string or array, it returns SSO token.
      If scopes is non-empty, it returns access token for target scope.
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<null | AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/core-auth.GetTokenOptions" />
          description: >-
            The options used to configure any requests this TokenCredential
            implementation might make.
      return:
        description: Access token with expected scopes.
        type: Promise&lt;null | <xref uid="@azure/core-auth.AccessToken" />&gt;
  - name: getUserInfo()
    uid: '@microsoft/teamsfx.OnBehalfOfUserCredential.getUserInfo'
    package: '@microsoft/teamsfx'
    summary: |+
      Get basic user info from SSO token.

      **Example**

      ```typescript
      const currentUser = getUserInfo();
      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getUserInfo(): UserInfo'
      return:
        description: Basic user info with user displayName, objectId and preferredUserName.
        type: <xref uid="@microsoft/teamsfx.UserInfo" />
