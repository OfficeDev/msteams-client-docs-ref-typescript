### YamlMime:TSPackage
uid: '@microsoft/teamsfx.AgentBuilderCloudAdapter'
name: AgentBuilderCloudAdapter
summary: ''
type: module
classes:
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.BotSsoExecutionDialog'
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.CardActionBot'
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.Channel'
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.CommandBot'
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.ConversationBot'
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.Member'
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.NotificationBot'
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.TeamsBotInstallation'
interfaces:
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.ConversationOptions'
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.NotificationOptions'
enums:
  - '@microsoft/teamsfx.AgentBuilderCloudAdapter.SearchScope'
package: '@microsoft/teamsfx'
functions:
  - name: >-
      sendAdaptiveCard(NotificationTarget, unknown, (context: TurnContext,
      error: Error) => Promise<void>)
    uid: '@microsoft/teamsfx.AgentBuilderCloudAdapter.sendAdaptiveCard'
    package: '@microsoft/teamsfx'
    summary: Send an adaptive card message to a notification target.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendAdaptiveCard(target: NotificationTarget, card: unknown,
        onError?: (context: TurnContext, error: Error) => Promise<void>):
        Promise<MessageResponse>
      parameters:
        - id: target
          type: <xref uid="@microsoft/teamsfx.NotificationTarget" />
          description: The notification target.
        - id: card
          type: unknown
          description: The adaptive card raw JSON.
        - id: onError
          type: '(context: TurnContext, error: Error) =&gt; Promise&lt;void&gt;'
          description: >-
            An optional error handler that can catch exceptions during adaptive
            card sending.

            If not defined, error will be handled by `BotAdapter.onTurnError`.
      return:
        description: The response of sending adaptive card message.
        type: Promise&lt;MessageResponse&gt;
  - name: >-
      sendMessage(NotificationTarget, string, (context: TurnContext, error:
      Error) => Promise<void>)
    uid: '@microsoft/teamsfx.AgentBuilderCloudAdapter.sendMessage'
    package: '@microsoft/teamsfx'
    summary: Send a plain text message to a notification target.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendMessage(target: NotificationTarget, text: string, onError?:
        (context: TurnContext, error: Error) => Promise<void>):
        Promise<MessageResponse>
      parameters:
        - id: target
          type: <xref uid="@microsoft/teamsfx.NotificationTarget" />
          description: The notification target.
        - id: text
          type: string
          description: The plain text message.
        - id: onError
          type: '(context: TurnContext, error: Error) =&gt; Promise&lt;void&gt;'
          description: >-
            An optional error handler that can catch exceptions during message
            sending.

            If not defined, error will be handled by `BotAdapter.onTurnError`.
      return:
        description: The response of sending message.
        type: Promise&lt;MessageResponse&gt;
