### YamlMime:TSType
name: LivePresenceUser
uid: '@microsoft/live-share.LivePresenceUser'
package: '@microsoft/live-share'
summary: A user that presence is being tracked for.
fullName: LivePresenceUser<TData>
remarks: ''
isDeprecated: false
type: class
properties:
  - name: data
    uid: '@microsoft/live-share.LivePresenceUser.data'
    package: '@microsoft/live-share'
    summary: >-
      Optional data shared by the user. Returns data from connection with most
      recent event.

      Client connection specific data is available from each connection.
    fullName: data
    remarks: ''
    isDeprecated: false
    syntax:
      content: undefined | TData data
      return:
        description: ''
        type: undefined | TData
  - name: displayName
    uid: '@microsoft/live-share.LivePresenceUser.displayName'
    package: '@microsoft/live-share'
    summary: ''
    fullName: displayName
    remarks: ''
    isDeprecated: false
    syntax:
      content: undefined | string displayName
      return:
        description: ''
        type: undefined | string
  - name: isLocalUser
    uid: '@microsoft/live-share.LivePresenceUser.isLocalUser'
    package: '@microsoft/live-share'
    summary: If `true` the user is the local user.
    fullName: isLocalUser
    remarks: ''
    isDeprecated: false
    syntax:
      content: boolean isLocalUser
      return:
        description: ''
        type: boolean
  - name: roles
    uid: '@microsoft/live-share.LivePresenceUser.roles'
    package: '@microsoft/live-share'
    summary: Returns the user's meeting roles.
    fullName: roles
    remarks: ''
    isDeprecated: false
    syntax:
      content: UserMeetingRole[] roles
      return:
        description: ''
        type: <xref uid="@microsoft/live-share.UserMeetingRole" />[]
  - name: state
    uid: '@microsoft/live-share.LivePresenceUser.state'
    package: '@microsoft/live-share'
    summary: Users current state.
    fullName: state
    remarks: ''
    isDeprecated: false
    syntax:
      content: PresenceState state
      return:
        description: ''
        type: <xref uid="@microsoft/live-share.PresenceState" />
  - name: userId
    uid: '@microsoft/live-share.LivePresenceUser.userId'
    package: '@microsoft/live-share'
    summary: ID of the user. Can be undefined when first initialized.
    fullName: userId
    remarks: ''
    isDeprecated: false
    syntax:
      content: string userId
      return:
        description: ''
        type: string
methods:
  - name: getConnection(string)
    uid: '@microsoft/live-share.LivePresenceUser.getConnection'
    package: '@microsoft/live-share'
    summary: |-
      Returns the user's connection associated with clientId.
      See <xref:LivePresenceConnection>
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getConnection(clientId: string): undefined |
        LivePresenceConnection<TData>
      parameters:
        - id: clientId
          type: string
          description: The ID of the client to lookup.
      return:
        description: ''
        type: undefined | LivePresenceConnection&lt;TData&gt;
  - name: getConnections(PresenceState)
    uid: '@microsoft/live-share.LivePresenceUser.getConnections'
    package: '@microsoft/live-share'
    summary: |-
      Returns the user's connections.
      See <xref:LivePresenceConnection>
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getConnections(filter?: PresenceState):
        LivePresenceConnection<TData>[]
      parameters:
        - id: filter
          type: <xref uid="@microsoft/live-share.PresenceState" />
          description: ''
      return:
        description: ''
        type: LivePresenceConnection&lt;TData&gt;[]
  - name: isFromClient(string)
    uid: '@microsoft/live-share.LivePresenceUser.isFromClient'
    package: '@microsoft/live-share'
    summary: Returns true if the presence object is from the specified client.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isFromClient(clientId: string): boolean'
      parameters:
        - id: clientId
          type: string
          description: The ID of the client to lookup.
      return:
        description: ''
        type: boolean
