### YamlMime:TSType
name: Media
uid: '@microsoft/teams-js.@microsoft.teams-js.public.media.media.Media'
package: '@microsoft/teams-js'
summary: Media object returned by the select Media API
fullName: Media
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Media(Media)
    uid: >-
      @microsoft/teams-js.@microsoft.teams-js.public.media.media.Media.constructor
    package: '@microsoft/teams-js'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Media(that?: Media)'
      parameters:
        - id: that
          type: >-
            @microsoft/teams-js.<xref
            uid="@microsoft.teams-js.public.media.media.Media" />
          description: ''
properties:
  - name: content
    uid: '@microsoft/teams-js.@microsoft.teams-js.public.media.media.Media.content'
    package: '@microsoft/teams-js'
    summary: >-
      Content of the file. When format is Base64, this is the base64 content

      When format is ID, this is id mapping to the URI

      When format is base64 and app needs to use this directly in HTML tags, it
      should convert this to dataUrl.
    fullName: content
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'content: string'
      return:
        type: string
        description: ''
  - name: format
    uid: '@microsoft/teams-js.@microsoft.teams-js.public.media.media.Media.format'
    package: '@microsoft/teams-js'
    summary: Format of the content
    fullName: format
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'format: FileFormat'
      return:
        type: >-
          @microsoft/teams-js.<xref
          uid="@microsoft.teams-js.public.media.media.FileFormat" />
        description: ''
  - name: mimeType
    uid: '@microsoft/teams-js.@microsoft.teams-js.public.media.media.Media.mimeType'
    package: '@microsoft/teams-js'
    summary: 'MIME type. This can be used for constructing a dataUrl, if needed.'
    fullName: mimeType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'mimeType: string'
      return:
        type: string
        description: ''
  - name: name
    uid: '@microsoft/teams-js.@microsoft.teams-js.public.media.media.Media.name'
    package: '@microsoft/teams-js'
    summary: 'Optional: Name of the file'
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name?: string'
      return:
        type: string
        description: ''
  - name: preview
    uid: '@microsoft/teams-js.@microsoft.teams-js.public.media.media.Media.preview'
    package: '@microsoft/teams-js'
    summary: >-
      A preview of the file which is a lightweight representation.

      In case of images this will be a thumbnail/compressed image in base64
      encoding.
    fullName: preview
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'preview: string'
      return:
        type: string
        description: ''
  - name: size
    uid: '@microsoft/teams-js.@microsoft.teams-js.public.media.media.Media.size'
    package: '@microsoft/teams-js'
    summary: Size of the file in KB
    fullName: size
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'size: number'
      return:
        type: number
        description: ''
methods:
  - name: 'getMedia((error: SdkError, blob: Blob) => void)'
    uid: >-
      @microsoft/teams-js.@microsoft.teams-js.public.media.media.Media.getMedia_1
    package: '@microsoft/teams-js'
    summary: >-
      Gets the media in chunks irrespective of size, these chunks are assembled
      and sent back to the webapp as file/blob
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getMedia(callback: (error: SdkError, blob: Blob) => void)'
      parameters:
        - id: callback
          type: '(error: SdkError, blob: Blob) =&gt; void'
          description: |
            returns blob of media
  - name: getMedia()
    uid: '@microsoft/teams-js.@microsoft.teams-js.public.media.media.Media.getMedia'
    package: '@microsoft/teams-js'
    summary: >-
      Gets the media in chunks irrespective of size, these chunks are assembled
      and sent back to the webapp as file/blob
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getMedia()
      return:
        type: Promise&lt;Blob&gt;
        description: A promise resolved with the @see Blob or rejected with a @see SdkError
extends: '@microsoft/teams-js.<xref uid="@microsoft.teams-js.public.media.media.File" />'
