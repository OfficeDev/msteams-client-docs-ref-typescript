### YamlMime:UniversalReference
items:
  - uid: botbuilder-teams.TeamsMessage
    name: TeamsMessage
    fullName: TeamsMessage
    children:
      - botbuilder-teams.TeamsMessage.addMentionToText
      - botbuilder-teams.TeamsMessage.AlertFlag
      - botbuilder-teams.TeamsMessage.getConversationUpdateData
      - botbuilder-teams.TeamsMessage.getGeneralChannel
      - botbuilder-teams.TeamsMessage.getTenantId
      - botbuilder-teams.TeamsMessage.getTextWithoutMentions
      - botbuilder-teams.TeamsMessage.routeReplyToGeneralChannel
      - botbuilder-teams.TeamsMessage.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: Message
    package: botbuilder-teams
  - uid: botbuilder-teams.TeamsMessage.addMentionToText
    name: addMentionToText
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deprecated, please use UserMention and ChannelMention
       Enable bot to send a message to mention user
       @param {builder.IIdentity} mentionedUser - The user to mention
       @param {MentionTextLocation} textLocation - This defines append or prepend the mention text
       @param {string} mentionText - text to mention
    syntax:
      content: >-
        function addMentionToText(mentionedUser: IIdentity, textLocation?:
        MentionTextLocation, mentionText?: string)
      parameters:
        - id: mentionedUser
          type:
            - IIdentity
          description: ''
        - id: textLocation
          type:
            - botbuilder-teams.MentionTextLocation
          description: ''
          optional: true
        - id: mentionText
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - botbuilder-teams.TeamsMessage
  - uid: botbuilder-teams.TeamsMessage.AlertFlag
    name: AlertFlag
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Return alert flag to mark this message as Alert/Notification in
      sourceEvent
    syntax:
      content: static function AlertFlag()
      parameters: []
      return:
        type:
          - any
  - uid: botbuilder-teams.TeamsMessage.getConversationUpdateData
    name: getConversationUpdateData
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Return conversation update related event
       @param {IConversationUpdate} message - user message like adding member to channel, rename etc
    syntax:
      content: 'static function getConversationUpdateData(message: IConversationUpdate)'
      parameters:
        - id: message
          type:
            - IConversationUpdate
          description: ''
      return:
        type:
          - botbuilder-teams.TeamEventBase
  - uid: botbuilder-teams.TeamsMessage.getGeneralChannel
    name: getGeneralChannel
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Get message related team info
       @param {IEvent} message - The message sent to bot.
    syntax:
      content: 'static function getGeneralChannel(message: IEvent)'
      parameters:
        - id: message
          type:
            - IEvent
          description: ''
      return:
        type:
          - botbuilder-teams.ChannelInfo
  - uid: botbuilder-teams.TeamsMessage.getTenantId
    name: getTenantId
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Get message related tenant id
       @param {IEvent} message - The message sent to bot.
    syntax:
      content: 'static function getTenantId(message: IEvent)'
      parameters:
        - id: message
          type:
            - IEvent
          description: ''
      return:
        type:
          - string
  - uid: botbuilder-teams.TeamsMessage.getTextWithoutMentions
    name: getTextWithoutMentions
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Retrun message without mentions
       @param {IMessage} message - The message with mentions
    syntax:
      content: 'static function getTextWithoutMentions(message: IMessage)'
      parameters:
        - id: message
          type:
            - IMessage
          description: ''
      return:
        type:
          - string
  - uid: botbuilder-teams.TeamsMessage.routeReplyToGeneralChannel
    name: routeReplyToGeneralChannel
    children: []
    type: method
    langs:
      - typeScript
    summary: Route message to general channel
    syntax:
      content: function routeReplyToGeneralChannel()
      parameters: []
      return:
        type:
          - botbuilder-teams.TeamsMessage
  - uid: botbuilder-teams.TeamsMessage.constructor
    name: TeamsMessage
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new TeamsMessage(session?: Session)'
      parameters:
        - id: session
          type:
            - Session
          description: ''
          optional: true
references:
  - uid: botbuilder-teams.MentionTextLocation
    spec.typeScript:
      - name: MentionTextLocation
        fullName: MentionTextLocation
        uid: botbuilder-teams.MentionTextLocation
  - uid: botbuilder-teams.TeamsMessage
    spec.typeScript:
      - name: TeamsMessage
        fullName: TeamsMessage
        uid: botbuilder-teams.TeamsMessage
  - uid: botbuilder-teams.TeamEventBase
    spec.typeScript:
      - name: TeamEventBase
        fullName: TeamEventBase
        uid: botbuilder-teams.TeamEventBase
  - uid: botbuilder-teams.ChannelInfo
    spec.typeScript:
      - name: ChannelInfo
        fullName: ChannelInfo
        uid: botbuilder-teams.ChannelInfo
